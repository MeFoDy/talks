:root {
	--cols: 5;
	--rows: 3;
	--size: 10em;

	--default-text-color: #ff2407;
	--default-bg-color: #000;

	--stream-deck-padding-top: 9rem;
	--stream-deck-padding-other-edges: 4rem;

	--border-radius: 0.5rem;
}

* {
	padding: 0;
	margin: 0;
}

body {
	min-height: 100vh;
	background: var(--default-bg-color);
    background-image: url('./pictures/stage.jpeg');
    background-size: cover;
	color: var(--default-text-color);

	display: grid;
	place-items: center;
	text-align: center;

	font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", "Roboto", "Oxygen", "Ubuntu", "Cantarell", "Fira Sans", "Droid Sans", "Helvetica Neue", sans-serif;
}

section {
	display: grid;
	gap: 1em;
}

footer, a {
	color: #fef502;
}

a:hover {
	color: orange;
}

/* Reserve space while .streamdeck is loading â€¦*/
#app {
	width: calc(var(--cols) * var(--size) + var(--stream-deck-padding-other-edges) * 2);
	height: calc(var(--rows) * var(--size) + var(--stream-deck-padding-other-edges) + var(--stream-deck-padding-top));
}

.streamdeck {
	width: calc(var(--cols) * var(--size));
	height: calc(var(--rows) * var(--size));
	list-style: none;

	display: grid;
	grid-template-rows: repeat(var(--rows), 1fr);
	grid-template-columns: repeat(var(--cols), 1fr);
	gap: 1em;

	border: 1px solid currentColor;
	border-radius: var(--border-radius);
	padding: var(--stream-deck-padding-top) var(--stream-deck-padding-other-edges) var(--stream-deck-padding-other-edges) var(--stream-deck-padding-other-edges);
	position: relative;

	background-color: #090909;
}

.streamdeck::before {
	content: 'WebHID Stream Deck';
	white-space: nowrap;
	font-weight: 700;
	position: absolute;
	top: calc(var(--stream-deck-padding-top) / 2);
	left: 50%;
	transform: translate3d(-50%, -50%, 0);
	font-size: 3em;
}

.streamdeck button {
	color: var(--text-color, var(--default-text-color));
	background-color: var(--bg-color, var(--default-bg-color));
	position: relative;
	border: 1px solid currentColor;
	border-radius: var(--border-radius);
	overflow: hidden;

	display: none;
}

/* We render all buttons, but simply only show those based on the active-page-index on the .streamdeck itself */
[data-active-page-index="0"] [data-page-index="0"] {
	display: block;
}
[data-active-page-index="1"] [data-page-index="1"] {
	display: block;
}
[data-active-page-index="3"] [data-page-index="3"] {
	display: block;
}
[data-active-page-index="4"] [data-page-index="4"] {
	display: block;
}


@keyframes light-it-up {
	50% {
		color: white;
	}
	100% {
		color: var(--text-color, var(--default-text-color));
	}
}

.streamdeck button:active, .streamdeck button:focus {
	animation: 0.25s ease-in-out light-it-up forwards;
	outline: none;
}

.streamdeck button[data-keycode]:not([data-keycode=""])::after {
	display: block;
	position: absolute;
	pointer-events: none;
	content: attr(data-keycode);
	bottom: 1em;
	left: 0;
	right: 0;
	height: 1em;
	font-size: 0.7em;
	font-style: italic;
}

.streamdeck button > img {
	display: block;
	width: 100%;
	height: 100%;
	object-fit: cover;
	pointer-events: none;
}

.streamdeck button > span {
	font-size: 2.5em;
	pointer-events: none;
}
